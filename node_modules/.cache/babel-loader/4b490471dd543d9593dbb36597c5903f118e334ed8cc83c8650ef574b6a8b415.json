{"ast":null,"code":"var _jsxFileName = \"/Users/otaviocunha/Desktop/Programac\\u0327a\\u0303o/Brincadeiras/PedidoComDeploy/SiteNovo/src/pages/Projects/ForcaGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ForcaGame.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForcaGame() {\n  _s();\n  const secretPhrase = \"quer namorar comigo?\";\n  const words = secretPhrase.split(\" \"); // Divide a frase em palavras\n  const initialDisplayPhrase = words.map(word => word.replace(/./g, \"_\")); // Inicializa a frase oculta\n\n  const [displayPhrase, setDisplayPhrase] = useState(initialDisplayPhrase);\n  const [usedLetters, setUsedLetters] = useState([]);\n  const maxAttempts = 10;\n  const [attemptsLeft, setAttemptsLeft] = useState(maxAttempts);\n  const handleGuess = guess => {\n    if (usedLetters.includes(guess)) {\n      // A letra já foi usada\n      return;\n    }\n    const newUsedLetters = [...usedLetters, guess];\n    setUsedLetters(newUsedLetters);\n    let phraseUpdated = displayPhrase.slice(); // Copia a frase atual\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const wordArray = Array.from(word);\n      for (let j = 0; j < wordArray.length; j++) {\n        if (wordArray[j] === guess) {\n          phraseUpdated[i] = phraseUpdated[i].split('');\n          phraseUpdated[i][j] = guess;\n          phraseUpdated[i] = phraseUpdated[i].join('');\n        }\n      }\n    }\n    setDisplayPhrase(phraseUpdated);\n    if (!secretPhrase.includes(guess)) {\n      setAttemptsLeft(attemptsLeft - 1);\n    }\n  };\n  const renderAlphabetButtons = () => {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz?-!#$%*\";\n    return alphabet.split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGuess(letter),\n      children: letter.toUpperCase()\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forca-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jogo da Forca\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"phrase-label\",\n      children: \"Frase a ser adivinhada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), displayPhrase.map((word, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"phrase\",\n      children: word\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"attempts-left\",\n      children: [\"Tentativas restantes: \", attemptsLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alphabet-buttons\",\n      children: renderAlphabetButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ForcaGame, \"hx+bxVO8g8ivcdZ9uV0s3lfZM1k=\");\n_c = ForcaGame;\nexport default ForcaGame;\nvar _c;\n$RefreshReg$(_c, \"ForcaGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForcaGame","_s","secretPhrase","words","split","initialDisplayPhrase","map","word","replace","displayPhrase","setDisplayPhrase","usedLetters","setUsedLetters","maxAttempts","attemptsLeft","setAttemptsLeft","handleGuess","guess","includes","newUsedLetters","phraseUpdated","slice","i","length","wordArray","Array","from","j","join","renderAlphabetButtons","alphabet","letter","onClick","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","className","index","_c","$RefreshReg$"],"sources":["/Users/otaviocunha/Desktop/Programação/Brincadeiras/PedidoComDeploy/SiteNovo/src/pages/Projects/ForcaGame.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ForcaGame.scss\";\n\nfunction ForcaGame() {\n  const secretPhrase = \"quer namorar comigo?\";\n  const words = secretPhrase.split(\" \"); // Divide a frase em palavras\n  const initialDisplayPhrase = words.map(word => word.replace(/./g, \"_\")); // Inicializa a frase oculta\n\n  const [displayPhrase, setDisplayPhrase] = useState(initialDisplayPhrase);\n\n  const [usedLetters, setUsedLetters] = useState([]);\n  const maxAttempts = 10;\n  const [attemptsLeft, setAttemptsLeft] = useState(maxAttempts);\n\n  const handleGuess = (guess) => {\n    if (usedLetters.includes(guess)) {\n      // A letra já foi usada\n      return;\n    }\n\n    const newUsedLetters = [...usedLetters, guess];\n    setUsedLetters(newUsedLetters);\n\n    let phraseUpdated = displayPhrase.slice(); // Copia a frase atual\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const wordArray = Array.from(word);\n\n      for (let j = 0; j < wordArray.length; j++) {\n        if (wordArray[j] === guess) {\n          phraseUpdated[i] = phraseUpdated[i].split('');\n          phraseUpdated[i][j] = guess;\n          phraseUpdated[i] = phraseUpdated[i].join('');\n        }\n      }\n    }\n\n    setDisplayPhrase(phraseUpdated);\n\n    if (!secretPhrase.includes(guess)) {\n      setAttemptsLeft(attemptsLeft - 1);\n    }\n  };\n\n  const renderAlphabetButtons = () => {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz?-!#$%*\";\n    return alphabet.split(\"\").map((letter) => (\n      <button key={letter} onClick={() => handleGuess(letter)}>\n        {letter.toUpperCase()}\n      </button>\n    ));\n  };\n\n  return (\n    <div className=\"forca-game\">\n      <h1>Jogo da Forca</h1>\n      <p className=\"phrase-label\">Frase a ser adivinhada:</p>\n      {displayPhrase.map((word, index) => (\n        <p key={index} className=\"phrase\">{word}</p>\n      ))}\n      <p className=\"attempts-left\">Tentativas restantes: {attemptsLeft}</p>\n      <div className=\"alphabet-buttons\">{renderAlphabetButtons()}</div>\n    </div>\n  );\n}\n\nexport default ForcaGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}