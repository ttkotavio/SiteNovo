{"ast":null,"code":"var _jsxFileName = \"/Users/otaviocunha/Desktop/Programac\\u0327a\\u0303o/Brincadeiras/PedidoComDeploy/SiteNovo/src/pages/Projects/ForcaGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useLayoutEffect } from \"react\";\nimport Confetti from \"react-confetti\";\nimport \"./ForcaGames.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForcaGame() {\n  _s();\n  const [cont, setCont] = useState(0); // Declare cont como um estado\n  const secretPhrase = \"quer namorar comigo?\";\n  const words = secretPhrase.split(\" \"); // Divide a frase em palavras\n  const initialDisplayPhrase = words.map(word => word.replace(/./g, \"_\")); // Inicializa a frase oculta\n\n  const [displayPhrase, setDisplayPhrase] = useState(initialDisplayPhrase);\n  const [usedLetters, setUsedLetters] = useState([]);\n  const maxAttempts = 10;\n  const [attemptsLeft, setAttemptsLeft] = useState(maxAttempts);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const handleGuess = guess => {\n    if (usedLetters.includes(guess)) {\n      // A letra já foi usada\n      return;\n    }\n    const newUsedLetters = [...usedLetters, guess];\n    setUsedLetters(newUsedLetters);\n    let phraseUpdated = displayPhrase.slice(); // Copia a frase atual\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const wordArray = Array.from(word);\n      for (let j = 0; j < wordArray.length; j++) {\n        if (wordArray[j] === guess) {\n          phraseUpdated[i] = phraseUpdated[i].split(\"\");\n          phraseUpdated[i][j] = guess;\n          phraseUpdated[i] = phraseUpdated[i].join(\"\");\n        }\n      }\n    }\n    setDisplayPhrase(phraseUpdated);\n    if (!secretPhrase.includes(guess)) {\n      setAttemptsLeft(attemptsLeft - 1);\n    } else {\n      setCont(cont + 1); // Incrementa cont usando setCont\n      console.log(cont);\n    }\n    if (cont === 17) {\n      setAttemptsLeft(0);\n    }\n  };\n  const renderAlphabetButtons = () => {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz?-!#$%*\";\n    return alphabet.split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGuess(letter),\n      children: letter.toUpperCase()\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this));\n  };\n  const handleNo = () => {\n    // Implemente o código para mover o botão \"NÃO\" para baixo\n    // Isso pode ser feito usando CSS ou animações JavaScript.\n    // Por exemplo, você pode adicionar uma classe CSS ao botão \"NÃO\"\n    // que faz ele se mover para baixo.\n  };\n  const handleYes = () => {\n    setShowConfetti(true);\n    // Outras ações que você deseja realizar ao clicar em \"SIM\"\n  };\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      // Atualiza o tamanho da janela aqui, se necessário\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forca-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jogo da Forca\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"phrase-label\",\n      children: \"Frase a ser adivinhada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), displayPhrase.map((word, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"phrase\",\n      children: word\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"attempts-left\",\n      children: [\"Tentativas restantes: \", attemptsLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alphabet-buttons\",\n      children: renderAlphabetButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), attemptsLeft === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"end-game-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNo,\n        children: \"N\\xC3O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleYes,\n        children: \"SIM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(ForcaGame, \"RCv2J3C0xAWkHv8RjjzDIHzDYgw=\");\n_c = ForcaGame;\nexport default ForcaGame;\nvar _c;\n$RefreshReg$(_c, \"ForcaGame\");","map":{"version":3,"names":["React","useState","useLayoutEffect","Confetti","jsxDEV","_jsxDEV","ForcaGame","_s","cont","setCont","secretPhrase","words","split","initialDisplayPhrase","map","word","replace","displayPhrase","setDisplayPhrase","usedLetters","setUsedLetters","maxAttempts","attemptsLeft","setAttemptsLeft","showConfetti","setShowConfetti","handleGuess","guess","includes","newUsedLetters","phraseUpdated","slice","i","length","wordArray","Array","from","j","join","console","log","renderAlphabetButtons","alphabet","letter","onClick","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","handleNo","handleYes","updateSize","window","addEventListener","removeEventListener","className","index","width","innerWidth","height","innerHeight","_c","$RefreshReg$"],"sources":["/Users/otaviocunha/Desktop/Programação/Brincadeiras/PedidoComDeploy/SiteNovo/src/pages/Projects/ForcaGame.js"],"sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport Confetti from \"react-confetti\";\nimport \"./ForcaGames.scss\";\n\nfunction ForcaGame() {\n  const [cont, setCont] = useState(0); // Declare cont como um estado\n  const secretPhrase = \"quer namorar comigo?\";\n  const words = secretPhrase.split(\" \"); // Divide a frase em palavras\n  const initialDisplayPhrase = words.map((word) => word.replace(/./g, \"_\")); // Inicializa a frase oculta\n\n  const [displayPhrase, setDisplayPhrase] = useState(initialDisplayPhrase);\n\n  const [usedLetters, setUsedLetters] = useState([]);\n  const maxAttempts = 10;\n  const [attemptsLeft, setAttemptsLeft] = useState(maxAttempts);\n  const [showConfetti, setShowConfetti] = useState(false);\n\n  const handleGuess = (guess) => {\n    if (usedLetters.includes(guess)) {\n      // A letra já foi usada\n      return;\n    }\n\n    const newUsedLetters = [...usedLetters, guess];\n    setUsedLetters(newUsedLetters);\n\n    let phraseUpdated = displayPhrase.slice(); // Copia a frase atual\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const wordArray = Array.from(word);\n\n      for (let j = 0; j < wordArray.length; j++) {\n        if (wordArray[j] === guess) {\n          phraseUpdated[i] = phraseUpdated[i].split(\"\");\n          phraseUpdated[i][j] = guess;\n          phraseUpdated[i] = phraseUpdated[i].join(\"\");\n        }\n      }\n    }\n\n    setDisplayPhrase(phraseUpdated);\n\n    if (!secretPhrase.includes(guess)) {\n      setAttemptsLeft(attemptsLeft - 1);\n    } else {\n      setCont(cont + 1); // Incrementa cont usando setCont\n      console.log(cont);\n    }\n\n    if (cont === 17) {\n      setAttemptsLeft(0);\n    }\n  };\n\n  const renderAlphabetButtons = () => {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz?-!#$%*\";\n    return alphabet.split(\"\").map((letter) => (\n      <button key={letter} onClick={() => handleGuess(letter)}>\n        {letter.toUpperCase()}\n      </button>\n    ));\n  };\n\n  const handleNo = () => {\n    // Implemente o código para mover o botão \"NÃO\" para baixo\n    // Isso pode ser feito usando CSS ou animações JavaScript.\n    // Por exemplo, você pode adicionar uma classe CSS ao botão \"NÃO\"\n    // que faz ele se mover para baixo.\n  };\n\n  const handleYes = () => {\n    setShowConfetti(true);\n    // Outras ações que você deseja realizar ao clicar em \"SIM\"\n  };\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      // Atualiza o tamanho da janela aqui, se necessário\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n\n  return (\n    <div className=\"forca-game\">\n      <h1>Jogo da Forca</h1>\n      <p className=\"phrase-label\">Frase a ser adivinhada:</p>\n      {displayPhrase.map((word, index) => (\n        <p key={index} className=\"phrase\">\n          {word}\n        </p>\n      ))}\n      <p className=\"attempts-left\">Tentativas restantes: {attemptsLeft}</p>\n      <div className=\"alphabet-buttons\">{renderAlphabetButtons()}</div>\n\n      {attemptsLeft === 0 && (\n        <div className=\"end-game-buttons\">\n          <button onClick={handleNo}>NÃO</button>\n          <button onClick={handleYes}>SIM</button>\n        </div>\n      )}\n\n      {showConfetti && (\n        <Confetti width={window.innerWidth} height={window.innerHeight} />\n      )}\n    </div>\n  );\n}\n\nexport default ForcaGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}