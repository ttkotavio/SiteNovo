{"ast":null,"code":"var _jsxFileName = \"/Users/otaviocunha/Desktop/Programac\\u0327a\\u0303o/Brincadeiras/PedidoComDeploy/SiteNovo/src/pages/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport HeaderComponent from \"../../components/header/Header\";\nimport React, { useState } from \"react\";\nimport \"./Projects.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const questions = [{\n    question: \"Qual a cor favorita do Otávio?\",\n    options: [\"Verde\", \"Vermelho\", \"Azul\", \"Amarelo\"],\n    answer: \"Azul\"\n  }, {\n    question: \"A primeira cartinha que o Otavio fez foi:\",\n    options: [\"Do Senhor dos Anéis\", \"De Star Wars\", \"Do Harry Potter\", \"De Pokémon\"],\n    answer: \"Do Harry Potter\"\n  }, {\n    question: \"Qual o time do Otávio?\",\n    options: [\"Grêmio\", \"Inter\", \"Santos\", \"Corinthians\"],\n    answer: \"Grêmio\"\n  }, {\n    question: \"Qual é o tipo de filme favorito do Otávio?\",\n    options: [\"Comédia\", \"Ação\", \"Romance\", \"Terror\"],\n    answer: \"Terror\"\n  }, {\n    question: \"Qual série o Otávio perdeu a aposta dos beijos?\",\n    options: [\"Boba Fett\", \"Breaking Bad\", \"Stranger Things\", \"Game of Thrones\"],\n    answer: \"Boba Fett\"\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const handleAnswer = selectedOption => {\n    if (selectedOption === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"questions\",\n          children: [\"Parab\\xE9ns voc\\xEA acertou: \", score, \" de \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Conhece mesmo o Ot\\xE1vio?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"questions\",\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleAnswer(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"52ANnnaTaL/UyXw1nBLlAm9vhNo=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["HeaderComponent","React","useState","jsxDEV","_jsxDEV","Projects","_s","questions","question","options","answer","currentQuestion","setCurrentQuestion","score","setScore","quizCompleted","setQuizCompleted","handleAnswer","selectedOption","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/Users/otaviocunha/Desktop/Programação/Brincadeiras/PedidoComDeploy/SiteNovo/src/pages/Projects/Projects.js"],"sourcesContent":["import HeaderComponent from \"../../components/header/Header\";\nimport React, { useState } from \"react\";\n\nimport \"./Projects.scss\";\n\nfunction Projects() {\n  const questions = [\n    {\n      question: \"Qual a cor favorita do Otávio?\",\n      options: [ \"Verde\", \"Vermelho\", \"Azul\", \"Amarelo\"],\n      answer: \"Azul\",\n    },\n    {\n      question: \"A primeira cartinha que o Otavio fez foi:\",\n      options: [\n        \"Do Senhor dos Anéis\",\n        \"De Star Wars\",\n        \"Do Harry Potter\",\n        \"De Pokémon\",\n      ],\n      answer: \"Do Harry Potter\",\n    },\n    { \n      question: \"Qual o time do Otávio?\",\n      options: [\"Grêmio\", \"Inter\", \"Santos\", \"Corinthians\"],\n      answer: \"Grêmio\",\n    },\n    {\n      question: \"Qual é o tipo de filme favorito do Otávio?\",\n      options: [\"Comédia\", \"Ação\", \"Romance\", \"Terror\"],\n      answer: \"Terror\",\n    },\n    {\n      question: \"Qual série o Otávio perdeu a aposta dos beijos?\",\n      options: [\n        \"Boba Fett\",\n        \"Breaking Bad\",\n        \"Stranger Things\",\n        \"Game of Thrones\",\n      ],\n      answer: \"Boba Fett\",\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n\n  const handleAnswer = (selectedOption) => {\n    if (selectedOption === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <HeaderComponent />\n      <div className=\"content\">\n        {quizCompleted ? (\n          <div>\n            <h1>Quiz completed!</h1>\n            <p className=\"questions\">\n              Parabéns você acertou: {score} de {questions.length}\n            </p>\n          </div>\n        ) : (\n          <div>\n            <h1>Conhece mesmo o Otávio?</h1>\n            <p className=\"questions\">{questions[currentQuestion].question}</p>\n              {questions[currentQuestion].options.map((option, index) => (\n                <button className=\"button\" onClick={() => handleAnswer(option)}>\n                  {option}\n                </button>\n              ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}